<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009" 
         xmlns:s="library://ns.adobe.com/flex/spark" 
         xmlns:mx="library://ns.adobe.com/flex/mx"
		     xmlns:whiteboard="org.jboss.demo.whiteboard.*"
         title="Enter a Whiteboard">
  
  <fx:Metadata>
    [Event(name="whiteboardSelected", type="org.jboss.demo.whiteboard.WhiteboardEvent")]
  </fx:Metadata>
  
  <fx:Script>
  	import mx.messaging.messages.AsyncMessage;
      
  	private var _whiteboardId:String;
    
    public function get whiteboardId():String
    {
      return _whiteboardId;
    }
    public function set whiteboardId(_whiteboardId:String):void
    {
      getWhiteboardNameCallResponder.token = con.whiteboardServiceRemoteObject.getWhiteboardNameFromId(_whiteboardId);
      this._whiteboardId = _whiteboardId;
    }
      	  
  	private function enterWhiteboard():void
  	{
  		// todo: run validator
  		
      enterWhiteboardCallResponder.token = con.whiteboardServiceRemoteObject.enterWhiteboard(whiteboardName.text, userDisplayName.text, whiteboardId);
  	}
  </fx:Script>
  
  <fx:Declarations>
  	<whiteboard:ConnectionHandler id="con">
      <whiteboard:entryRequestMessage>
        // if we get a message here we expect it's body to just contain the whiteboardId
        if (event.message.body is String)
        {
          _whiteboardId = event.message.body as String;
          enterWhiteboard();
        }
      </whiteboard:entryRequestMessage>
    </whiteboard:ConnectionHandler>
  	<s:CallResponder id="enterWhiteboardCallResponder">
  		<s:result>
        Model.getInstance().attendee = event.result as AttendeeDTO;
  			if (Model.getInstance().attendee.whiteboard != null)
        {
  			  // we are in
          con.attendeeListChangeProducer.subtopic = Model.getInstance().attendee.whiteboard.id;
          con.attendeeListChangeProducer.send(new AsyncMessage());
          dispatchEvent(new WhiteboardEvent("whiteboardSelected", Model.getInstance().attendee.whiteboard));
        
          // reset this view for exit
          pendingLayer.visible = false;
          _whiteboardId = null;
  			}
        else
        {
          // pending request
          pendingLayer.visible = true;
        
          con.entryRequestConsumer.subtopic = Model.getInstance().attendee.id;
          con.entryRequestConsumer.subscribe();
        }
  		</s:result>
  	</s:CallResponder>
    <s:CallResponder id="getWhiteboardNameCallResponder">
      <s:result>
        whiteboardName.text = event.result as String;
      </s:result>
    </s:CallResponder>
  </fx:Declarations>
  
  <s:Form>   
    
    <s:layout>
      <s:FormLayout paddingBottom="20" paddingLeft="20" paddingRight="20" paddingTop="20"/>
    </s:layout>
    
  	<s:FormItem label="Your Display Name" required="true">
  	  <s:TextInput id="userDisplayName"/>
  	</s:FormItem>
  	
  	<s:FormItem label="Whiteboard Name" width="100%" required="true">
  	  <s:TextInput id="whiteboardName">
  	    <s:enter>
  			  enterWhiteboard();
  	    </s:enter>
  	  </s:TextInput>
  	</s:FormItem>
  	
    <s:Group width="100%">
      <s:Button label="Enter Whiteboard" horizontalCenter="0">
        <s:click>
          enterWhiteboard();
        </s:click>
      </s:Button>  
    </s:Group>
    
  </s:Form>
  
  <s:Group id="pendingLayer" visible="false" left="15" right="15" top="15" bottom="15">
    <s:Rect width="100%" height="100%">
      <s:fill>
        <s:SolidColor color="#ffffff"/>
      </s:fill>
    </s:Rect>
    <s:Label text="Your request to enter the &quot;{whiteboardName.text}&quot; whiteboard is pending approval..." maxDisplayedLines="-1" maxWidth="{pendingLayer.width}" horizontalCenter="0" verticalCenter="0"/>
  </s:Group>
  
</s:Panel>